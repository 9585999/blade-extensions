<!--
  ~ Copyright (c) 2017. Robin Radic.
  ~
  ~ The license can be found in the package and online at https://radic.mit-license.org.
  ~
  ~ @copyright Copyright 2017 (c) Robin Radic
  ~ @license https://radic.mit-license.org The MIT License
  -->

<project name="blade-extensions" default="install">

    <!--run bootstrap.sh to clone the build tools into the project-->
    <exec command="if [ -d '${project.basedir}/build' ]; then echo 'true'; else echo 'false'; fi;" outputProperty="output.IS_DIRECTORY_EXISTS"/>
    <if>
        <equals arg1="${output.IS_DIRECTORY_EXISTS}" arg2="false"/>
        <then>
            <exec command="bash ${project.basedir}/scripts/bootstrap.sh" logoutput="true" passthru="true"/>
        </then>
    </if>

    <echo message="${project.basedir}"/>
    <import file="${project.basedir}/build/phing/base.xml"/>
    <import file="${project.basedir}/build/phing/git.xml"/>
    <import file="${project.basedir}/build/phing/code-quality.xml"/>


    <property name="git.owner" value="robinradic" override="true"/>
    <property name="git.repo" value="blade-extensions" override="true"/>

    <!--Collections -->
    <target name="pre-commit" unless="pre-commit.done" description="Prepare for build">
        <phingcall target="lint"/>
        <phingcall target="php-cs-fixer"/>
        <phingcall target="phpunit"/>
        <phingcall target="phpdoc"/>
        <phingcall target="clean"/>
        <property name="pre-commit.done" value="true"/>
    </target>

    <target name="travis" unless="travis.done" description="Task for TravisCI">
        <phingcall target="git.add"/>
        <phingcall target="git.commit.auto"/>
        <phingcall target="git.push"/>
        <property name="travis.done" value="true"/>
    </target>

    <!--Preperation-->
    <target name="clean" unless="clean.done" description="Cleanup build artifacts">
        <delete dir="${project.basedir}/vendor"/>
        <delete file="${project.basedir}/composer.lock"/>
        <property name="clean.done" value="true"/>
    </target>

    <target name="install" unless="install.done" description="Install dependencies using Composer">
        <exec executable="composer" logoutput="${logoutput}" passthru="${passthru}">
            <arg line="install"/>
        </exec>
        <property name="install.done" value="true"/>
    </target>

    <!--Tasks-->
    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l"/>

            <fileset dir="${project.basedir}/src">
                <include name="**/*.php"/>
            </fileset>

            <fileset dir="${project.basedir}/tests">
                <include name="**/*.php"/>
            </fileset>
        </apply>
    </target>

    <target name="php-cs-fixer" description="Fixes coding standard violations using php-cs-fixer">
        <exec executable="${paths.bin}/php-cs-fixer" logoutput="${logoutput}" passthru="${passthru}">
            <arg line="fix"/>
            <arg line="${project.basedir}"/>
            <arg value="--config-file=${paths.php_cs}"/>
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="${paths.bin}/phpunit" logoutput="${logoutput}" passthru="${passthru}">
            <arg value="--configuration"/>
            <arg path="${project.basedir}/phpunit.xml"/>
            <arg value="--bootstrap"/>
            <arg path="${paths.vendor}/autoload.php"/>
        </exec>
    </target>

    <target name="phpdoc" description="Generate phpdoc structure xml and move into docs folder">
        <exec executable="${paths.bin}/phpdoc" dir="${project.basedir}" logoutput="${logoutput}" passthru="${passthru}">
            <arg value="run"/>
            <arg line="-t ${project.basedir}/phpdoc"/>
            <arg line="-d ${project.basedir}/src"/>
            <arg line="--template=xml"/>
        </exec>
        <move file="${project.basedir}/phpdoc/structure.xml" tofile="${paths.phpdoc-xml}"/>
        <delete dir="${project.basedir}/phpdoc"/>

    </target>

</project>
