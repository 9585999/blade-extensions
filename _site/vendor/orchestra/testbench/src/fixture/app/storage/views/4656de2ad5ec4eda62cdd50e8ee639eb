<?php /* View::make('set', ['dataString' => 'hello', 'dataArray' => $this->data->array, 'dataClassInstance' => $this->data, 'dataClassName' => 'TestData'])->render(); */ ?>

<?php /* Test view data */ ?>
<?php $testClassInstance->assertTrue($dataString === 'hello'); ?>
<?php $testClassInstance->assertTrue(is_array($dataArray)); ?>
<?php $testClassInstance->assertTrue($dataClassInstance instanceof TestData); ?>;


<?php $mams = 'mamsVal'; ?>
<?php $testClassInstance->assertTrue(isset($mams), '@set  mams should create a new var'); ?>
<?php $testClassInstance->assertTrue($mams === 'mamsVal', 'should create new variable named $mams with value "mamsVal"'); ?>

<?php unset($mams); ?>
<?php $testClassInstance->assertFalse(isset($mams), '@unset  mams should delete mams'); ?>

<?php $mams = 'oelala'; ?>
<?php $testClassInstance->assertTrue(isset($mams), '@set  $mams should create a new var'); ?>
<?php $testClassInstance->assertTrue($mams === 'oelala', 'should create new variable named $mams with value "oelala"'); ?>

<?php $mams = 'pops'; ?>;
<?php $testClassInstance->assertTrue($mams === 'pops', '@set  should accept a $variable as key, and override the old value'); ?>

<?php $mams = 'childs'; ?>;
<?php $testClassInstance->assertTrue($mams === 'childs', '@set  should accept a string as key, and override the old value'); ?>





<?php /* [0] => Array
                     (
                         [_id] => 542231ae3749519f2775a6b2
                         [index] => 0 */ ?>
<?php $testArray = $dataArray; ?>
<?php $testClassInstance->assertTrue(is_array($testArray)); ?>
<?php $testClassInstance->assertArrayHasKey(0, $testArray); ?>
<?php $testClassInstance->assertTrue($testArray[0]['index'] === 0); ?>


<?php $testArray[0]['index'] = 1; ?>
<?php $testClassInstance->assertTrue($testArray[0]['index'] === 1); ?>

<?php $pops = $testArray[0]['index']; ?>
<?php $testClassInstance->assertTrue($pops === $testArray[0]['index']); ?>

<?php unset($pops); ?>;
<?php $testClassInstance->assertFalse(isset($pops)); ?>